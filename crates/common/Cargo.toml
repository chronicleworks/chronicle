[package]
build = "build.rs"
edition = "2021"
name = "common"
version = "0.7.5"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
Inflector = { workspace = true, optional = true }
anyhow = { version = "^1", default-features = false }
async-graphql = { version = "^7", features = [
    "opentelemetry",
    "chrono",
    "unblock",
    "default",
    "uuid",
], optional = true }
async-trait = { workspace = true }
chrono = { version = "^0.4", default-features = false, features = [
    "serde",
    "alloc",
] }
diesel = { version = "2.1", features = [
    "postgres",
    "uuid",
    "chrono",
    "r2d2",
], optional = true }
futures = { version = "0.3", default-features = false }
hashbrown = { version = "0.13", default-features = false, optional = true }
hex = { version = "0.4", default-features = false, features = ["alloc"] }
iref = { version = "2.2", optional = true }
iri-string = { version = "^0.7", default-features = false, features = [
    "alloc",
] }
json-ld = { version = "0.14", optional = true }
json-syntax = { version = "0.9", features = [
    "serde",
    "serde_json",
], optional = true }
k256 = { version = "0.11.3", default-features = false, features = [
    "ecdsa",
    "pkcs8",
] }
lazy_static = { version = "1.4" }
locspan = { version = "0.7", optional = true }
macro-attr-2018 = { workspace = true }
mime = { version = "0.3", optional = true }
newtype-derive-2018 = { workspace = true }
opa = { git = "https://github.com/chronicleworks/opa-rs", rev = "9fa2fbce", optional = true }
parity-scale-codec = { version = "3.6.1", default-features = false, features = [
    "derive",
    "max-encoded-len",
], optional = true }
percent-encoding = { version = "^2.1", default-features = false, features = [
    "alloc",
] }
rdf-types = { version = "0.14", optional = true }
reqwest = { version = "0.11", optional = true }
rust-embed = { version = "6", features = [
    "debug-embed",
    "include-exclude",
], optional = true }
scale-decode = { version = "^0.10.0", default-features = false, features = [
    "derive",
], optional = true }
scale-encode = { version = "^0.5.0", default-features = false, features = [
    "derive",
    "primitive-types",
    "bits",
], optional = true }
scale-info = { version = "^2.10.0", default-features = false, features = [
    "derive",
], optional = true }
serde = { version = "1.0", default-features = false, features = [
    "rc",
    "derive",
] }
serde_derive = { version = "1.0", default-features = false }
serde_json = { version = "^1.0", default-features = false, features=["alloc"]}
serde_yaml = { workspace = true, optional = true }
sp-core = { git = 'https://github.com/paritytech/polkadot-sdk.git', tag = 'polkadot-v1.9.0', default-features = false }
sp-std = { git = 'https://github.com/paritytech/polkadot-sdk.git', tag = 'polkadot-v1.9.0', default-features = false, optional = true}
thiserror = { workspace = true }
thiserror-no-std = { version = "2.0.2" }
tracing = { version = "0.1", default-features = false, features = [
    "attributes",
] }
url = { version = "2", optional = true }
uuid = { version = "1.5.0", default-features = false, features = ["serde"] }

[build-dependencies]
glob = { workspace = true }
lazy_static = { workspace = true }
serde_json = { workspace = true }

[dev-dependencies]
assert_fs = { workspace = true }
criterion = { workspace = true }
insta = { workspace = true, features = ["json"] }
mockito = { workspace = true }
proptest = { workspace = true }
tempfile = { workspace = true }
testcontainers = { workspace = true }
tokio = { workspace = true }

[features]
default = ["std"]
std = [
    "k256/std",
    "sp-core/std",
    "sp-std/std",
    "tracing/std",
    "serde/std",
    "serde_json/std",
    "hex/std",
    "scale-encode/std",
    "futures/std",
    "iri-string/std",
    "chrono/std",
    "anyhow/std",
    "percent-encoding/std",
    "opa",
    "url",
    "reqwest",
    "rust-embed",
    "scale-encode/std",
    "scale-decode/std",
    "scale-info/std",
    "uuid/v4",
    "Inflector",
    "serde_yaml",
]
# Enable parity support, annoyingly lazy_static has a non standard way of enabling non_std
parity-encoding = [
    "lazy_static/spin_no_std",
    "parity-scale-codec",
    "scale-info",
    "scale-encode",
    "scale-decode",
]
# At this point, LD should be a seperate crate
diesel-bindings = ["diesel"]
graphql-bindings = ["async-graphql"]
json-ld = [
    "dep:json-ld",
    "dep:json-syntax",
    "dep:rdf-types",
    "dep:hashbrown",
    "dep:mime",
    "dep:locspan",
    "dep:iref",
]
