[package]
edition = "2021"
name = "chronicle"
version = "0.7.5"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
Inflector = { workspace = true }
async-graphql = { workspace = true }
async-signals = { workspace = true }
async-trait = { workspace = true }
cfg-if = { workspace = true }
chronicle-signing = { workspace = true }
chrono = { workspace = true, features = ["serde"] }
clap = { workspace = true, features = ["derive", "env"] }
clap_complete = { workspace = true }
colored_json = { workspace = true }
const_format = { workspace = true }
diesel = { workspace = true }
dotenvy = { workspace = true }
futures = { workspace = true }
genco = { workspace = true }
hex = { workspace = true }
iri-string = { version = "^0.7", default-features = false, features = [
    "alloc",
] }
is-terminal = { workspace = true }
jsonschema = { workspace = true }
libc = { version = "^0.2" }
opa = { workspace = true }
opentelemetry = { workspace = true }
percent-encoding = { workspace = true }
question = { workspace = true }
serde = { workspace = true }
serde_derive = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
shellexpand = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
toml = { workspace = true }
tracing = { workspace = true }
tracing-log = { workspace = true }
url = { workspace = true, features = ["serde"] }
user-error = { workspace = true }
uuid = { workspace = true }
valico = { workspace = true }

#Local dependencies
api = { path = "../api" }
chronicle-arrow = { path = "../chronicle-arrow" }
chronicle-persistence = { path = "../chronicle-persistence" }
chronicle-telemetry = { path = "../chronicle-telemetry" }
common = { path = "../common", features = [
    "json-ld",
    "std",
    "parity-encoding",
    "graphql-bindings",
] }
embedded-substrate = { path = "../embedded-substrate", optional = true }
protocol-substrate = { path = "../protocol-substrate" }
protocol-substrate-chronicle = { path = "../protocol-substrate-chronicle" }
protocol-substrate-opa = { path = "../protocol-substrate-opa" }

[features]
devmode = ["dep:embedded-substrate"]
strict = []

[build-dependencies]

[dev-dependencies]
assert_fs = { workspace = true }
embedded-substrate = { path = "../embedded-substrate" }
insta = { workspace = true, features = ["yaml"] }
mockito = { version = "*" }
protocol-abstract = { path = "../protocol-abstract" }
protocol-substrate = { path = "../protocol-substrate" }
protocol-substrate-chronicle = { path = "../protocol-substrate-chronicle" }
protocol-substrate-opa = { path = "../protocol-substrate-opa" }
tempfile = { workspace = true }
